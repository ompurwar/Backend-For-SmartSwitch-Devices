{
  "_args": [
    [
      {
        "raw": "mongodb-extjson@github:mongodb-js/mongodb-extjson#3985033",
        "scope": null,
        "escapedName": "mongodb-extjson",
        "name": "mongodb-extjson",
        "rawSpec": "github:mongodb-js/mongodb-extjson#3985033",
        "spec": "github:mongodb-js/mongodb-extjson#3985033",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:mongodb-js/mongodb-extjson.git#3985033",
          "sshUrl": "git+ssh://git@github.com/mongodb-js/mongodb-extjson.git#3985033",
          "httpsUrl": "git+https://github.com/mongodb-js/mongodb-extjson.git#3985033",
          "gitUrl": "git://github.com/mongodb-js/mongodb-extjson.git#3985033",
          "shortcut": "github:mongodb-js/mongodb-extjson#3985033",
          "directUrl": "https://raw.githubusercontent.com/mongodb-js/mongodb-extjson/3985033/package.json"
        }
      },
      "e:\\final year project work\\app\\trial\\mongoDb-on-node-js\\node_modules\\mongodb-stitch"
    ]
  ],
  "_from": "mongodb-js/mongodb-extjson#3985033",
  "_id": "mongodb-extjson@1.0.5",
  "_inCache": true,
  "_location": "/mongodb-extjson",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mongodb-extjson@github:mongodb-js/mongodb-extjson#3985033",
    "scope": null,
    "escapedName": "mongodb-extjson",
    "name": "mongodb-extjson",
    "rawSpec": "github:mongodb-js/mongodb-extjson#3985033",
    "spec": "github:mongodb-js/mongodb-extjson#3985033",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:mongodb-js/mongodb-extjson.git#3985033",
      "sshUrl": "git+ssh://git@github.com/mongodb-js/mongodb-extjson.git#3985033",
      "httpsUrl": "git+https://github.com/mongodb-js/mongodb-extjson.git#3985033",
      "gitUrl": "git://github.com/mongodb-js/mongodb-extjson.git#3985033",
      "shortcut": "github:mongodb-js/mongodb-extjson#3985033",
      "directUrl": "https://raw.githubusercontent.com/mongodb-js/mongodb-extjson/3985033/package.json"
    }
  },
  "_requiredBy": [
    "/mongodb-stitch"
  ],
  "_resolved": "git://github.com/mongodb-js/mongodb-extjson.git#39850337ee1ce485dc93dbcd1de50ea49c90a5ef",
  "_shasum": "c50a93a9cff58b7819829f13c8ca9fbdb3d1600f",
  "_shrinkwrap": null,
  "_spec": "mongodb-extjson@github:mongodb-js/mongodb-extjson#3985033",
  "_where": "e:\\final year project work\\app\\trial\\mongoDb-on-node-js\\node_modules\\mongodb-stitch",
  "author": {
    "name": "Christian Kvalheim"
  },
  "bugs": {
    "url": "https://github.com/mongodb-js/mongodb-extjson/issues"
  },
  "dependencies": {
    "bson": "github:mongodb/js-bson#2.0.0"
  },
  "description": "MongoDB Extended JSON library",
  "devDependencies": {
    "chai": "^4.1.2",
    "eslint": "^4.7.2",
    "eslint-plugin-prettier": "^2.3.1",
    "istanbul": "^0.4.5",
    "mocha": "^3.4.1",
    "mongodb": "^2.2.27",
    "prettier": "^1.7.0"
  },
  "gitHead": "39850337ee1ce485dc93dbcd1de50ea49c90a5ef",
  "homepage": "https://github.com/mongodb-js/mongodb-extjson#readme",
  "keywords": [
    "mongodb",
    "json",
    "extended",
    "extjson",
    "parser",
    "serializer",
    "deserializer"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "name": "mongodb-extjson",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/mongodb-js/mongodb-extjson.svg?branch=master)](https://travis-ci.org/mongodb-js/mongodb-extjson)\r\n\r\n# MongoDB Extended JSON Library\r\n\r\nThe MongoDB Extended JSON Library allows you to convert MongoDB documents to Extended JSON, and vice versa. See the Extended JSON specification [here](https://github.com/mongodb/specifications/blob/master/source/extended-json.rst).\r\n\r\n## Usage with MongoDB Driver\r\nThis library can be used along with the [MongoDB driver for Node.js](https://github.com/mongodb/node-mongodb-native) to convert MongoDB documents to extended JSON form.\r\n\r\n### Serialize a document\r\nSerialize a document using `EJSON.stringify(value, reducer, indents, options)`. The `reducer` and `indents` arguments are analogous to `JSON.stringify`'s `replacer` and `spaces` arguments, respectively (see [documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify).) \r\n\r\n`options` currently supports a single option, `relaxed`; with `options = {relaxed: true}`, the returned object will be in the more readable \"relaxed\" extended JSON format. \r\n\r\n```js\r\nlet EJSON = require('mongodb-extjson'),\r\n\tInt32 = require('mongodb').Int32;\r\n    \r\nvar doc = { int32: new Int32(10) };\r\n\r\n// prints '{\"int32\":{\"$numberInt\":\"10\"}}'\r\nconsole.log(EJSON.stringify(doc));\r\n\r\n// prints '{\"int32\":10}'\r\nconsole.log(EJSON.stringify(doc, {relaxed: true}));\r\n```\r\n\r\n## Usage with MongoDB BSON Library\r\nOur [js-bson](https://github.com/mongodb/js-bson) library is included as a dependency and used by default for Javascript representations of BSON types. See the next section for instructions on using it with a different BSON library. \r\n\r\n### Serialize a document\r\nThis works identically to the previous serialize example, but does not require including the MongoDB driver. The BSON types are all available under EJSON.BSON.\r\n\r\n```js\r\nlet EJSON = require('mongodb-extjson'),\r\n\tInt32 = EJSON.BSON.Int32;\r\n    \r\nvar doc = { int32: new Int32(10) };\r\n\r\n// prints '{\"int32\":{\"$numberInt\":\"10\"}}'\r\nconsole.log(EJSON.stringify(doc));\r\n```\r\n\r\n### Deserialize a document\r\nThe library also allows converting extended JSON strings to Javascript objects, using BSON type classes defined in js-bson. You can do this using `EJSON.parse(string, options)`. \r\n\r\nThis method supports the option `strict`. By default, `strict` is true; if `strict` is set to `false`, the parser will attempt to return native JS types where possible, rather than BSON types (i.e. return a `Number` instead of a `BSON.Int32` object, etc.) \r\n\r\n```js\r\nlet EJSON = require('mongodb-extjson');\r\n\r\nvar text = '{\"int32\":{\"$numberInt\":\"10\"}}';\r\n\r\n// prints { int32: { [String: '10'] _bsontype: 'Int32', value: '10' } }\r\nconsole.log(EJSON.parse(text));\r\n\r\n// prints { int32: 10 }\r\nconsole.log(EJSON.parse(text, {strict: false}));\r\n```\r\n\r\n\r\n## Usage With Other BSON Parsers\r\n\r\nAlthough we include the pure Javascript BSON parser by default, you can also use a different BSON parser with this library, such as [bson-ext](https://www.npmjs.com/package/bson-ext). For example:\r\n\r\n```js\r\nlet EJSON = require('mongodb-extjson'),\r\n\tBSON = require('bson-ext'),\r\n    Int32 = BSON.Int32;\r\n\r\n// set BSON module to be bson-ext \r\nEJSON.setBSONModule(BSON);\r\n\r\nvar doc = { int32: new Int32(10) };\r\n// prints '{\"int32\":{\"$numberInt\":\"10\"}}'\r\nconsole.log(EJSON.stringify(doc));\r\n\r\nvar text = '{\"int32\":{\"$numberInt\":\"10\"}}';\r\n// prints { int32: { [String: '10'] _bsontype: 'Int32', value: '10' } }\r\nconsole.log(EJSON.parse(text));\r\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mongodb-js/mongodb-extjson.git"
  },
  "scripts": {
    "coverage": "istanbul cover _mocha -- --recursive -t --ui tdd test/",
    "format": "prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'",
    "lint": "eslint lib test",
    "test": "mocha test/"
  },
  "version": "1.0.5"
}
